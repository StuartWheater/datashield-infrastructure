# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.56.200"

  # config.ssh.username = "ubuntu"
  # config.ssh.password = "fbcd1ed4fe8c83b157dc6e0f"
  # config.ssh.username = "vagrant"
  # config.ssh.password = "vagrant"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true

    # Customize the amount of memory on the VM:
    vb.memory = "4096"

    # vb.customize [ "modifyvm", :id, "--uart1", "0x3F8", "4" ]
    # vb.customize [ "modifyvm", :id, "--uartmode1", "file", File::NULL ]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get update
    sudo apt-get upgrade -y

    sudo apt-get install -y ubuntu-desktop

    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
    sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/'
    sudo apt-get update
    sudo apt-get install -y r-base

    sudo apt-get install -y libclang-dev
    sudo curl https://download1.rstudio.org/desktop/bionic/amd64/rstudio-1.3.1093-amd64.deb --output /tmp/rstudio-1.3.1093-amd64.deb
    sudo dpkg --install /tmp/rstudio-1.3.1093-amd64.deb
    sudo apt-get install -f
    sudo rm -f /tmp/rstudio-1.3.1093-amd64.deb

    sudo apt-get install -y libgit2-dev libssl-dev libssh2-1-dev libxml2-dev libcurl4-gnutls-dev libfontconfig1-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev libgsl-dev
    sudo mkdir -p ~/R/x86_64-pc-linux-gnu-library/4.0
    sudo R -q -e "install.packages(c('devtools','metafor','fields','covr'), dependencies=TRUE, repos='https://cloud.r-project.org')" 
    sudo R -q -e "install.packages(c('DSI','DSOpal','DSLite'), dependencies=TRUE, repos='https://cloud.r-project.org')"
    sudo R -q -e "install.packages(c('RANN','nlme','stringr','lme4'), dependencies=TRUE, repos='https://cloud.r-project.org')" 

    sudo git clone https://github.com/datashield/dsBase.git -b v6.1-dev
    sudo git clone https://github.com/datashield/dsBaseClient.git -b v6.1-dev
  SHELL
end
